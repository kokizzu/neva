import {
    fmt
    errors
    runtime
}

def Main(start any) (stop any) {
    h Handler
    ---
    :start -> {
        MaybeInt::Int(42) -> h -> :stop
    }
}

type MaybeInt union {
    Int int
    None
}

// Unwraps the int, prints it and sends further.
def Handler(data MaybeInt) (res int) {
    must_println errors.Must<int, int>{
        fmt.Println<int>
    }
    panic runtime.Panic
    ---
    :data -> switch {
        MaybeInt::Int -> must_println -> :res
        _ -> panic
    }
}
