import { strconv, fmt }

def Main(start any) (stop any) {
	aux Aux,
	println fmt.Println<any>
	panic Panic
	---
	:start -> aux:sig
	[aux:res, aux:err] -> println:data
	println:res -> :stop
	println:err -> panic
}
	
def Aux(sig any) (res int, err error) {
	reader1 IntReader?
	reader2 IntReader?
	add Add<int>
	---
	:sig -> reader1:sig
	reader1:num -> [add:left, reader2:sig]
	reader2:num -> add:right
	add:res -> :res
}

def IntReader(sig any) (num int, err error) { 
	scanln fmt.Scanln
	parse_num strconv.ParseNum<int>?
	---
	:sig -> scanln:sig
	scanln:res -> parse_num:data
	parse_num:res -> :num
}
