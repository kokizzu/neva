import {
	fmt
	runtime
	strconv
}

def Main(start any) (stop any) {
	aux Aux,
	println fmt.Println<any>
	panic runtime.Panic
	---
	:start -> aux:sig
	[aux:res, aux:err] -> println:data
	println:res -> :stop
	println:err -> panic
}
	
def Aux(sig any) (res int, err error) {
	reader1 IntReader?
	reader2 IntReader?
	add Add<int>
	---
	:sig -> reader1
	reader1 -> [add:left, reader2]
	reader2 -> add:right
	add:res -> :res
}

def IntReader(sig any) (res int, err error) {
	scanln fmt.Scanln
	atoi strconv.Atoi<int>?
	---
	:sig -> scanln -> atoi -> :res
}
